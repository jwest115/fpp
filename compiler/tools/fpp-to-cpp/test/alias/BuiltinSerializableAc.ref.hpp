// ======================================================================
// \title  BuiltinSerializableAc.hpp
// \author Generated by fpp-to-cpp
// \brief  hpp file for Builtin struct
// ======================================================================

#ifndef BuiltinSerializableAc_HPP
#define BuiltinSerializableAc_HPP

#include "BuiltInTypeAliasAc.hpp"
#include "FpConfig.hpp"
#include "Fw/Types/ExternalString.hpp"
#include "Fw/Types/Serializable.hpp"
#include "Fw/Types/String.hpp"
#include "NamespacedBuiltin1AliasAc.hpp"
#include "NamespacedBuiltin2AliasAc.hpp"

class Builtin :
  public Fw::Serializable
{

  public:

    // ----------------------------------------------------------------------
    // Constants
    // ----------------------------------------------------------------------

    enum {
      //! The size of the serial representation
      SERIALIZED_SIZE =
        sizeof(BuiltInType) +
        sizeof(M::NamespacedBuiltin1) +
        sizeof(M::NamespacedBuiltin2)
    };

  public:

    // ----------------------------------------------------------------------
    // Constructors
    // ----------------------------------------------------------------------

    //! Constructor (default value)
    Builtin();

    //! Member constructor
    Builtin(
        BuiltInType A,
        M::NamespacedBuiltin1 B,
        M::NamespacedBuiltin2 C
    );

    //! Copy constructor
    Builtin(
        const Builtin& obj //!< The source object
    );

  public:

    // ----------------------------------------------------------------------
    // Operators
    // ----------------------------------------------------------------------

    //! Copy assignment operator
    Builtin& operator=(
        const Builtin& obj //!< The source object
    );

    //! Equality operator
    bool operator==(
        const Builtin& obj //!< The other object
    ) const;

    //! Inequality operator
    bool operator!=(
        const Builtin& obj //!< The other object
    ) const;

#ifdef BUILD_UT

    //! Ostream operator
    friend std::ostream& operator<<(
        std::ostream& os, //!< The ostream
        const Builtin& obj //!< The object
    );

#endif

  public:

    // ----------------------------------------------------------------------
    // Member functions
    // ----------------------------------------------------------------------

    //! Serialization
    Fw::SerializeStatus serialize(
        Fw::SerializeBufferBase& buffer //!< The serial buffer
    ) const;

    //! Deserialization
    Fw::SerializeStatus deserialize(
        Fw::SerializeBufferBase& buffer //!< The serial buffer
    );

#if FW_SERIALIZABLE_TO_STRING

    //! Convert struct to string
    void toString(
        Fw::StringBase& sb //!< The StringBase object to hold the result
    ) const;

#endif

    // ----------------------------------------------------------------------
    // Getter functions
    // ----------------------------------------------------------------------

    //! Get member A
    BuiltInType getA() const
    {
      return this->m_A;
    }

    //! Get member B
    M::NamespacedBuiltin1 getB() const
    {
      return this->m_B;
    }

    //! Get member C
    M::NamespacedBuiltin2 getC() const
    {
      return this->m_C;
    }

    // ----------------------------------------------------------------------
    // Setter functions
    // ----------------------------------------------------------------------

    //! Set all members
    void set(
        BuiltInType A,
        M::NamespacedBuiltin1 B,
        M::NamespacedBuiltin2 C
    );

    //! Set member A
    void setA(BuiltInType A);

    //! Set member B
    void setB(M::NamespacedBuiltin1 B);

    //! Set member C
    void setC(M::NamespacedBuiltin2 C);

  protected:

    // ----------------------------------------------------------------------
    // Member variables
    // ----------------------------------------------------------------------

    BuiltInType m_A;
    M::NamespacedBuiltin1 m_B;
    M::NamespacedBuiltin2 m_C;

};

#endif
